% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cox.R
\name{cox_reg}
\alias{cox_reg}
\alias{update.cox_reg}
\title{General Interface for Cox Models}
\usage{
cox_reg(mode = "censored regression", penalty = NULL, mixture = NULL)

\method{update}{cox_reg}(
  object,
  parameters = NULL,
  penalty = NULL,
  mixture = NULL,
  fresh = FALSE,
  ...
)
}
\arguments{
\item{mode}{A single character string for the type of model.
Possible values for this model are "unknown", or "censored regression".}

\item{penalty}{A non-negative number representing the total
amount of regularization (\code{glmnet}, \code{keras}, and \code{spark} only).
For \code{keras} models, this corresponds to purely L2 regularization
(aka weight decay) while the other models can be a combination
of L1 and L2 (depending on the value of \code{mixture}; see below).}

\item{mixture}{A number between zero and one (inclusive) that is the
proportion of L1 regularization (i.e. lasso) in the model. When
\code{mixture = 1}, it is a pure lasso model while \code{mixture = 0} indicates that
ridge regression is being used. (\code{glmnet} and \code{spark} only).}

\item{object}{A cox model specification.}

\item{parameters}{A 1-row tibble or named list with \emph{main}
parameters to update. If the individual arguments are used,
these will supersede the values in \code{parameters}. Also, using
engine arguments in this object will result in an error.}

\item{fresh}{A logical for whether the arguments should be
modified in-place of or replaced wholesale.}

\item{...}{Not used for \code{update()}.}
}
\description{
\code{cox_reg()} is a way to generate a \emph{specification} of a model before
fitting and allows the model to be created using different packages in R.
The main arguments for the model are:
\itemize{
\item \code{penalty}: The total amount of regularization
in the model. Note that this must be zero for some engines.
\item \code{mixture}: The mixture amounts of different types of
regularization (see below). Note that this will be ignored for some engines.
}
These arguments are converted to their specific names at the
time that the model is fit. Other options and arguments can be
set using \code{set_engine()}. If left to their defaults
here (\code{NULL}), the values are taken from the underlying model
functions. If parameters need to be modified, \code{update()} can be used
in lieu of recreating the object from scratch.
}
\details{
For \code{cox_reg()}, the mode will always be "survival".

The model can be created using the \code{fit()} function using the following \emph{engines}:
\itemize{
\item \pkg{R}: \code{"survival"} (the default)
}
}
\section{Engine Details}{


Engines may have pre-set default arguments when executing the model fit call.
For this type of model, the template of the fit calls are:

\pkg{survival} engine

\preformatted{
survival::coxph(formula = missing_arg())
}
}

\examples{
library(survival)

cox_mod <-
  cox_reg() \%>\%
  set_engine("survival") \%>\%
  fit(Surv(time, status) ~ x, data = aml)
model <- cox_reg(penalty = 10, mixture = 0.1)
model
update(model, penalty = 1)
update(model, penalty = 1, fresh = TRUE)
}
